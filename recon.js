'use strict';

var config = require('./config.json');
var parse = require('./src/parse');
var stringify = require('./src/stringify');
var base64 = require('./src/base64');
var isRecord = require('./src/isrecord');
var size = require('./src/size');
var head = require('./src/head');
var tail = require('./src/tail');
var tag = require('./src/tag');
var has = require('./src/has');
var get = require('./src/get');
var set = require('./src/set');
var remove = require('./src/remove');
var keys = require('./src/keys');
var values = require('./src/values');
var forEach = require('./src/foreach');
var concat = require('./src/concat');
var equal = require('./src/equal');
var compare = require('./src/compare');
var coerce = require('./src/coerce');
var StringIterator = require('./src/stringiterator');
var DocumentParser = require('./src/documentparser');
var BlockParser = require('./src/blockparser');
var RecordParser = require('./src/recordparser');
var UriParser = require('./src/uriparser');
var SchemeParser = require('./src/schemeparser');
var AuthorityParser = require('./src/authorityparser');
var PathParser = require('./src/pathparser');
var QueryParser = require('./src/queryparser');
var FragmentParser = require('./src/fragmentparser');
var resolveUri = require('./src/resolveuri');
var unresolveUri = require('./src/unresolveuri');
var parseUri = require('./src/parseuri');
var stringifyUri = require('./src/stringifyuri');

var uri = {};
uri.parse = parseUri;
uri.stringify = stringifyUri;
uri.resolve = resolveUri;
uri.unresolve = unresolveUri;

module.exports = function (value) {
  return coerce.apply(null, arguments);
};

exports = module.exports;
exports.parse = parse;
exports.stringify = stringify;
exports.base64 = base64;
exports.isRecord = isRecord;
exports.size = size;
exports.head = head;
exports.tail = tail;
exports.tag = tag;
exports.has = has;
exports.get = get;
exports.set = set;
exports.remove = remove;
exports.keys = keys;
exports.values = values;
exports.forEach = forEach;
exports.concat = concat;
exports.equal = equal;
exports.compare = compare;
exports.uri = uri;
exports.config = config;
exports.StringIterator = StringIterator;
exports.DocumentParser = DocumentParser;
exports.BlockParser = BlockParser;
exports.RecordParser = RecordParser;
exports.UriParser = UriParser;
exports.SchemeParser = SchemeParser;
exports.AuthorityParser = AuthorityParser;
exports.PathParser = PathParser;
exports.QueryParser = QueryParser;
exports.FragmentParser = FragmentParser;